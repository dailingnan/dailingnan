<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
http://www.springframework.org/schema/context 
http://www.springframework.org/schema/context/spring-context-3.0.xsd 
http://www.springframework.org/schema/mvc 
http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

	<!-- 自动扫描controller包下的所有类，使其认为spring mvc的控制器 -->
	<context:component-scan base-package="com.dailingnan.controller" />

	<!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
	<!-- <bean id="mappingJacksonHttpMessageConverter" -->
	<!-- class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"> -->
	<!-- <property name="supportedMediaTypes"> -->
	<!-- <list> -->
	<!-- <value>text/html;charset=UTF-8</value> -->
	<!-- </list> -->
	<!-- </property> -->
	<!-- </bean> -->

	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<!-- <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"> 
		<property name="messageConverters"> <list> <ref bean="mappingJacksonHttpMessageConverter" 
		/>json转换器 </list> </property> </bean> -->
	<mvc:annotation-driven />
	<!-- 对模型视图名称的解析，即在模型视图名称添加前后缀 -->
	<!-- 返回json数据时需要的配置 -->
	 <bean
        class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
            	<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"></bean>
               <!--   <ref bean="mappingJacksonHttpMessageConverter" />-->
            </list>
        </property>
    </bean>
    <!-- 文件上传下载时需要的配置 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="utf-8" />
		<property name="maxUploadSize" value="10485760000" />
		<property name="maxInMemorySize" value="4096" />
	</bean>
	<!-- 配置拦截器 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<!-- 拦截所有user的请求 -->
			<mvc:mapping path="/cart.html"/>
			<mvc:mapping path="/insertOrder.html"/>
			<mvc:mapping path="/updateState.html"/>
			<mvc:mapping path="/insertDiscuss.html"/>
			<bean class="com.daiingnan.interceptor.UserInterceptor"></bean>
		</mvc:interceptor>
		<mvc:interceptor>
			<!-- 拦截座位选择-->
			<mvc:mapping path="/seat.html"/>
			<bean class="com.daiingnan.interceptor.SeatInterceptor"></bean>
		</mvc:interceptor>
		 <!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 --> 
		 
		<!-- mvc:interceptors下的拦截器默认拦截所有请求 
		<bean class="com.daiingnan.interceptor.UserInterceptor"></bean>-->
	</mvc:interceptors>
</beans>